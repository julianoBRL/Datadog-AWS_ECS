name: Deploy to AWS ECS

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Setup_Java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 21 for x64
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          architecture: x64
          cache: maven
      - name: Java version
        run: java --version
      - name: Run the Maven verify phase
        run: mvn --batch-mode --update-snapshots verify
      - name: Upload JAR
        uses: actions/upload-artifact@v3
        with:
          name: app-jar
          path: target/*.jar

  Build_Docker_Image:
    runs-on: ubuntu-latest
    needs: Setup_Java
    steps:
      - uses: actions/checkout@v2
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: app-jar
          path: .
      - name: format repo name
        run: echo "REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: format repo name out
        run: echo "O nome do repo em lowercase é $REPO_NAME"
      - name: image build name
        run: echo "${{ secrets.DOCKER_USERNAME }}/$REPO_NAME"
      - name: Build Docker image
        run: docker build -t "${{ secrets.DOCKER_USERNAME }}/$REPO_NAME" .
      - name: Save Docker image as a .tar.gz
        run: docker save "${{ secrets.DOCKER_USERNAME }}/$REPO_NAME" | gzip > image.tar.gz
      - name: Save image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: ./image.tar.gz

  Publish_Docker_Image:
    runs-on: ubuntu-latest
    needs: Build_Docker_Image
    steps:
      - name: Download Image
        uses: actions/download-artifact@v3
        with:
          name: docker-image
      - name: check folder
        run: ls -l
      - name: unzip image and load
        run: docker load < image.tar.gz

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: format repo name
        run: echo "REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: format repo name out
        run: echo "O nome do repo em lowercase é $REPO_NAME"
      - name: image publish name
        run: echo "${{ secrets.DOCKER_USERNAME }}/$REPO_NAME"
      - name: Push Docker image to Docker Hub
        run: |
          docker tag "$REPO_NAME ${{ secrets.DOCKER_USERNAME }}/$REPO_NAME":latest
          docker push "${{ secrets.DOCKER_USERNAME }}/$REPO_NAME":latest